---
import Layout from '../../layouts/Layout.astro';
import Sidebar from '../../components/Sidebar.astro';

// URLパラメータから授業IDを取得
const { id } = Astro.params;

// 授業のサンプルデータ
const classes = {
  "math": {
    id: "math",
    name: "数学",
    teacher: "山田先生",
    color: "blue",
    assignments: [
      {
        id: "math-1",
        title: "二次方程式の解法",
        dueDate: "2025年6月15日",
        status: "active"
      },
      {
        id: "math-2",
        title: "三角関数の基礎",
        dueDate: "2025年6月20日",
        status: "active"
      },
      {
        id: "math-3",
        title: "確率の基本",
        dueDate: "2025年6月30日",
        status: "pending"
      }
    ]
  },
  "science": {
    id: "science",
    name: "理科",
    teacher: "佐藤先生",
    color: "green",
    assignments: [
      {
        id: "science-1",
        title: "化学反応の基本",
        dueDate: "2025年6月18日",
        status: "active"
      },
      {
        id: "science-2",
        title: "力学の法則",
        dueDate: "2025年7月5日",
        status: "pending"
      }
    ]
  },
  "english": {
    id: "english",
    name: "英語",
    teacher: "鈴木先生",
    color: "yellow",
    assignments: [
      {
        id: "english-1",
        title: "英語エッセイ作成",
        dueDate: "2025年6月25日",
        status: "pending"
      }
    ]
  },
  "social": {
    id: "social",
    name: "社会",
    teacher: "田中先生",
    color: "red",
    assignments: [
      {
        id: "social-1",
        title: "日本の歴史年表",
        dueDate: "2025年6月25日",
        status: "active"
      },
      {
        id: "social-2",
        title: "現代社会の課題",
        dueDate: "2025年7月10日",
        status: "pending"
      }
    ]
  }
};

// 該当する授業がない場合のリダイレクト
if (!classes[id]) {
  return Astro.redirect('/404');
}

const classData = classes[id];

// 授業ごとの課題データ
const assignmentsData = {
  math: [
    {
      id: 1,
      title: '二次方程式の解法',
      description: '二次方程式の因数分解と解の公式を使った解き方を学びましょう。',
      dueDate: '2025年6月1日',
      status: '進行中'
    },
    {
      id: 2,
      title: '三角関数の基礎',
      description: 'sin, cos, tanの基本的な性質と応用について学びます。',
      dueDate: '2025年6月10日',
      status: '未開始'
    },
    {
      id: 3,
      title: '確率統計入門',
      description: '基本的な確率計算と統計データの読み方を学びます。',
      dueDate: '2025年6月15日',
      status: '未開始'
    }
  ],
  science: [
    {
      id: 1,
      title: '化学反応の基本',
      description: '化学反応式のバランスと反応速度について学びます。',
      dueDate: '2025年6月3日',
      status: '進行中'
    },
    {
      id: 2,
      title: 'ニュートン力学',
      description: '運動の法則と力学的エネルギー保存則について理解します。',
      dueDate: '2025年6月12日',
      status: '未開始'
    },
    {
      id: 3,
      title: '細胞の構造と機能',
      description: '生物の基本単位である細胞の構造と役割について学びます。',
      dueDate: '2025年6月20日',
      status: '未開始'
    }
  ],
  english: [
    {
      id: 1,
      title: '英語エッセイ作成',
      description: '指定されたテーマに沿って英語でエッセイを書く練習をします。',
      dueDate: '2025年6月5日',
      status: '未開始'
    },
    {
      id: 2,
      title: 'リスニング演習',
      description: '日常会話のリスニング練習と内容理解を行います。',
      dueDate: '2025年6月15日',
      status: '未開始'
    }
  ],
  social: [
    {
      id: 1,
      title: '日本の歴史年表',
      description: '明治時代から現代までの重要な出来事をまとめます。',
      dueDate: '2025年6月2日',
      status: '進行中'
    },
    {
      id: 2,
      title: '世界の気候帯',
      description: '世界の気候区分と各地域の特徴を理解します。',
      dueDate: '2025年6月9日',
      status: '未開始'
    },
    {
      id: 3,
      title: '憲法の基本原則',
      description: '日本国憲法の三大原則とその意義について考察します。',
      dueDate: '2025年6月18日',
      status: '未開始'
    },
    {
      id: 4,
      title: '現代社会の課題',
      description: '少子高齢化など現代社会が抱える問題について調べます。',
      dueDate: '2025年6月25日',
      status: '未開始'
    }
  ]
};

// 現在の授業の課題を取得
const assignments = assignmentsData[id as keyof typeof assignmentsData] || [];
---

<Layout>
  <Sidebar />
  <main class="main">
    <div class="container">
      <header class="page-header">
        <div class="page-header__back">
          <a href="/" class="back-link">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <line x1="19" y1="12" x2="5" y2="12"></line>
              <polyline points="12 19 5 12 12 5"></polyline>
            </svg>
            <span>ホームに戻る</span>
          </a>
        </div>
        <div class="page-header__content">
          <h1 class="page-title">{classData.name}</h1>
          <p class="page-description">担当: {classData.teacher}</p>
        </div>
      </header>
      
      <section class="assignments-section">
        <div class="section-header">
          <h2 class="section-title">課題一覧</h2>
        </div>
        
        <div class="assignments-grid">
          {classData.assignments.map(assignment => (
            <a href={`/assignment/${assignment.id}`} class="assignment-card">
              <div class="assignment-card__color-indicator" style={`background-color: var(--color-${classData.color})`}></div>
              <div class="assignment-card__content">
                <h3 class="assignment-card__title">{assignment.title}</h3>
                <div class="assignment-card__meta">
                  <div class="assignment-card__due-date">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                      <line x1="16" y1="2" x2="16" y2="6"></line>
                      <line x1="8" y1="2" x2="8" y2="6"></line>
                      <line x1="3" y1="10" x2="21" y2="10"></line>
                    </svg>
                    <span>{assignment.dueDate}</span>
                  </div>
                  <div class="assignment-card__status" data-status={assignment.status}>
                    <span class="status-indicator"></span>
                    <span class="status-text">
                      {assignment.status === 'active' ? '進行中' : '予定'}
                    </span>
                  </div>
                </div>
              </div>
              <div class="assignment-card__action">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polyline points="9 18 15 12 9 6"></polyline>
                </svg>
              </div>
            </a>
          ))}
        </div>
      </section>
    </div>
  </main>
</Layout>

<style>
  .main {
    flex: 1;
    height: 100vh;
    overflow-y: auto;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }
  
  .page-header {
    margin-bottom: 2.5rem;
  }
  
  .page-header__back {
    margin-bottom: 1rem;
  }
  
  .back-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-secondary);
    text-decoration: none;
    font-size: 0.875rem;
    transition: color 0.2s ease;
  }
  
  .back-link:hover {
    color: var(--accent-primary);
  }
  
  .page-title {
    font-size: 1.75rem;
    font-weight: 700;
    margin-bottom: 0.5rem;
    color: var(--text-primary);
  }
  
  .page-description {
    font-size: 0.875rem;
    color: var(--text-secondary);
  }
  
  .section-header {
    margin-bottom: 1.5rem;
  }
  
  .section-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--text-primary);
  }
  
  .assignments-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 1.5rem;
  }
  
  .assignment-card {
    display: flex;
    background-color: var(--bg-secondary);
    border-radius: 0.75rem;
    overflow: hidden;
    border: 1px solid var(--border-color);
    text-decoration: none;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
  
  .assignment-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  }
  
  .assignment-card__color-indicator {
    width: 8px;
    height: auto;
    flex-shrink: 0;
  }
  
  .assignment-card__content {
    flex: 1;
    padding: 1.25rem;
  }
  
  .assignment-card__title {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: var(--text-primary);
  }
  
  .assignment-card__meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .assignment-card__due-date {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.75rem;
    color: var(--text-secondary);
  }
  
  .assignment-card__status {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.75rem;
  }
  
  .assignment-card__status[data-status="active"] {
    color: var(--color-blue);
  }
  
  .assignment-card__status[data-status="pending"] {
    color: var(--text-secondary);
  }
  
  .status-indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
  }
  
  .assignment-card__status[data-status="active"] .status-indicator {
    background-color: var(--color-blue);
  }
  
  .assignment-card__status[data-status="pending"] .status-indicator {
    background-color: var(--text-secondary);
  }
  
  .assignment-card__action {
    display: flex;
    align-items: center;
    padding-right: 1rem;
    color: var(--text-secondary);
  }
  
  @media (max-width: 768px) {
    .container {
      padding: 1.5rem;
    }
    
    .assignments-grid {
      grid-template-columns: 1fr;
    }
  }
  
  @media (max-width: 640px) {
    .main {
      height: calc(100vh - 60px);
    }
    
    .container {
      padding: 1rem;
    }
  }
</style> 